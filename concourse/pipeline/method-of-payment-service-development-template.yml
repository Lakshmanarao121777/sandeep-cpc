#alias
failure_notification: &failure_notification
  put: alert
  params:
    themeColor: "FF0000"
    status: FAILURE
    title: "branch build job failed. Refer CI/CD logs provided in link below for details."

error_notification: &error_notification
  put: alert
  params:
    themeColor: "FF0000"
    status: ERROR
    title: "Error occurred while executing pipeline, refer CI/CD logs provided in link below for details."

groups:
  - name: pull_request
    jobs:
      - validate-pull-request
  - name: development_branch
    jobs: [ build-test-development, build-deploy-development, rollback-development ]
  - name: integration_branch
    jobs: [ build-deploy-integration, rollback-integration ]

# configuring job
jobs:

#  - name: reconfigure-pipeline
#    plan:
#    - get: git-branch
#      trigger: true
#    - set_pipeline: method-of-payment-service-development
#      file: git-branch/ci/concourse/method-of-payment-service-development.yml

  - name: build-test-development
    serial: true
    plan:
      - get: concourse-repo
      - get: git-branch
        trigger: true
      - task: build-source
        file: concourse-repo/tasks/build_source_service.yml
        on_failure:
          <<: *failure_notification
        on_error:
          <<: *error_notification
      - task: sonar-scan
        file: concourse-repo/tasks/sonar_scan_service.yml
        on_failure:
          <<: *failure_notification
        on_error:
          <<: *error_notification

  - name: build-deploy-development
    serial: true
    plan:
      - get: concourse-repo
      - get: git-branch
        trigger: true
      - task: build-deploy
        file: concourse-repo/tasks/build_deploy_service.yml
        vars:
          environment: "development"

  - name: build-deploy-integration
    serial: true
    plan:
      - get: concourse-repo
      - get: git-branch
      - task: build-deploy
        file: concourse-repo/tasks/build_deploy_service.yml
        vars:
          environment: "integration"

  - name: rollback-development
    serial: true
    plan:
      - task: rollback
        file: concourse-repo/tasks/rollback_service.yml
        vars:
          environment: "development"

  - name: rollback-integration
    serial: true
    plan:
      - task: rollback
        file: concourse-repo/tasks/rollback_service.yml
        vars:
          environment: "integration"

  - name: validate-pull-request
    serial: true
    plan:
      - get: concourse-repo
      - get: git-branch
      - get: git-pull-request
        trigger: true
      - put: git-pull-request
        params:
          path: git-pull-request
          status: pending
      - task: get-commit-and-pr-ids
        file: concourse-repo/tasks/get_commit_and_pr_ids.yml
        input_mapping:
          code: git-pull-request
      - task: build-pull-request
        file: concourse-repo/tasks/build_pr_service.yml
        input_mapping:
          appcode: git-pull-request
        output_mapping:
          appcode: build
      - put: checkmarx
        params:
          project_name: CxServer\Comcast-NBCUniversal\Comcast\CXT\CXT-PB-Common-Payment\CXT-PB-Common-Payment-CMX-method-of-payment-service
          dir: git-pull-request
          fail_on: HIGH
          full_scan: true
      - put: whitesource
        params:
          dir: build
          config:
            projectName: method-of-payment-service
    on_failure:
      put: git-pull-request
      params:
        path: git-pull-request
        status: failure
        comment: "Pull request build failed!"
    on_error:
      put: git-pull-request
      params:
        path: git-pull-request
        status: Error
        comment: "Error occured while executing pipeline! :("
    on_success:
      put: git-pull-request
      params:
        path: git-pull-request
        status: success

# Getting required resources
resources:

  - name: concourse-repo
    type: git
    icon: git
    check_every: 500h
    source:
      branch: main
      uri: git@github.com:comcast-common-payment/concourse.git
      username: ((github.username)))
      private_key: ((github.sshPrivateKey))

  - name: git-branch
    type: git
    icon: git
    check_every: 500h
    webhook_token: ((method-of-payment-service/github.developmentBranchWebhookToken))
    source:
      branch: development
      uri: git@github.com:comcast-common-payment/method-of-payment-service.git
      username: ((github.username)))
      private_key: ((github.sshPrivateKey))

  - name: git-pull-request
    type: pull-request
    icon: source-pull
    check_every: 500h
    webhook_token: ((method-of-payment-service/github.developmentPrWebhookToken))
    source:
      repository: comcast-common-payment/method-of-payment-service
      base_branch: development
      access_token: ((github.accessToken))
      v3_endpoint: https://api.github.com
      v4_endpoint: https://api.github.com/graphql

  - name: checkmarx
    type: checkmarx
    check_every: 168h
    icon: file-search
    source:
      user: Active Directory\((service-account.username))
      password: ((service-account.secret))
  
  - name: whitesource
    type: whitesource
    icon: database-search
    check_every: 168h
    source:
      apiKey: ((whitesource.apiKey))
      userKey: ((whitesource.userToken))
      checkPolicies: true
      resolveAllDependencies: false
      productName: Common-Payment
      archiveExtractionDepth: 2
      includes: "**/*.jar"
      forceCheckAllDependencies: true
      forceUpdate: true
      forceUpdate.failBuildOnPolicyViolation: true

  - name: alert
    type: teams-notification
    icon: notification
    check_every: 500h
    source:
      webhook_url: ((alerts.deploymentChannelWebhook))

# defining resource types
resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

  - name: teams-notification
    type: registry-image
    source:
      repository: hub.comcast.net/pps-portal/teams-notification-resource
      tag: latest

  - name: checkmarx
    type: docker-image
    source:
      repository: hub.comcast.net/devsecops/checkmarx-resource

  - name: whitesource
    type: docker-image
    source:
      repository: hub.comcast.net/devsecops/whitesource-resource